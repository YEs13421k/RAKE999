local CoreGui = game:GetService("StarterGui") -- Variable of StarterGui
CoreGui:SetCore("SendNotification", {
    -- Customizable
    Title = "Hi Player!",
    Text = "WARNING DO NOT SHARE IT TO ANYONE THIS IS PRIVATE SCRIPT!!!",
    Duration = 10, -- Set the duration to how much you want this to stay
    -- More code in part 2
})
 game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
 if key == "z" then

game:GetService("Players").LocalPlayer.Character:FindFirstChild("Candy Cane").RemoteEvent:FireServer()

 end
end)
wait(0.1)
local CoreGui = game:GetService("StarterGui") -- Variable of StarterGui
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("rake kill test (beta)", "BloodTheme")
local Home = Window:NewTab("Home")
local Home = Home:NewSection("Home")
local Rake = Window:NewTab("Rake")
local Rake = Rake:NewSection("Cool Hacks!")
local Troll = Window:NewTab("Troll")
local Troll = Troll:NewSection("Have Fun Trolling :)")
local AutoFarm = Window:NewTab("AutoFarm")
local AutoFarm = AutoFarm :NewSection("AutoFarm")
Home:NewToggle("CLICK!", "ToggleInfo", function(state)
    if state then
        _G.Toggle = true

while _G.Toggle do
wait(0.1)
game:GetService("ReplicatedStorage").HitEvent:FireServer()

end
    else
        _G.Toggle = true

while _G.Toggle do
wait(0.1)
game:GetService("ReplicatedStorage").HitEvent:FireServer()

end
    end
end)
Home:NewButton("Enjoy! :)", "", function()
    print("")
end)
Home:NewKeybind("KeybindText", "", Enum.KeyCode.V, function()
	Library:ToggleUI()
end)
Rake:NewTextBox("RakeHealth", "ChangeRakeHealth 1-500", function(txt)
local args = {
    [1] = workspace.Rake.Humanoid,
    [2] = (txt)
}

game:GetService("ReplicatedStorage").healthEvent:FireServer(unpack(args))
CoreGui:SetCore("SendNotification", {
    -- Customizable
    Title = "Notify",
    Text = "RAKE'S HEALTH SUCCESFULLY CHANGED!",
    Duration = 10, -- Set the duration to how much you want this to stay
    -- More code in part 2
})
end)
Rake:NewButton("InstaKillRake", "", function()

local args = {
    [1] = workspace.Rake.Humanoid,
    [2] = "0"
}

game:GetService("ReplicatedStorage").healthEvent:FireServer(unpack(args))

end)
Rake:NewButton("MaxRakeHealth", "", function()
local args = {
    [1] = workspace.Rake.Humanoid,
    [2] = "500"
}

game:GetService("ReplicatedStorage").healthEvent:FireServer(unpack(args))

end)
Troll:NewToggle("Immortal Rake!", "ToggleInfo", function(state)
    if state then
        _G.Toggle = true

while _G.Toggle do
wait(0.1)
local args = {
    [1] = workspace.Rake.Humanoid,
    [2] = 500
}

game:GetService("ReplicatedStorage").healthEvent:FireServer(unpack(args))
end
    else
        _G.Toggle = false

while _G.Toggle do
wait(0.1)
local args = {
    [1] = workspace.Rake.Humanoid,
    [2] = 500
}

game:GetService("ReplicatedStorage").healthEvent:FireServer(unpack(args))
end
    end
end)
Troll:NewToggle("LagServer", "", function(state)
    if state then
        _G.Toggle = true

while _G.Toggle do
wait(0.1)

local args = {
    [1] = workspace.Rake.Humanoid,
    [2] = "500"
}

game:GetService("ReplicatedStorage").healthEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = workspace.Rake.Humanoid,
    [2] = workspace.Rake.AI.StunTime,
    [3] = workspace.Rake.AI.Stuns,
    [4] = 0
}

game:GetService("ReplicatedStorage").FlareRE.StunRE:FireServer(unpack(args))
end
    else
        _G.Toggle = false

while _G.Toggle do
wait(0.1)

local args = {
    [1] = workspace.Rake.Humanoid,
    [2] = "500"
}

game:GetService("ReplicatedStorage").healthEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = workspace.Rake.Humanoid,
    [2] = workspace.Rake.AI.StunTime,
    [3] = workspace.Rake.AI.Stuns,
    [4] = 0
}

game:GetService("ReplicatedStorage").FlareRE.StunRE:FireServer(unpack(args))
end
    end
end)
Rake:NewButton("FreezeRake", "TROLL", function()
local args = {
    [1] = workspace.Rake.FakeHead,
    [2] = workspace.Rake.Humanoid,
    [3] = 0
}

game:GetService("ReplicatedStorage").SnowballRE.DamageRE:FireServer(unpack(args))

end)
Troll:NewButton("FlyingRake", "", function()
local args = {
    [1] = workspace.Rake.Ribs,
    [2] = nil --[[Vector3]]
}

game:GetService("ReplicatedStorage").TaserRE.HitTargetRE:FireServer(unpack(args))

end)
Rake:NewButton("FireRake", "", function()
local args = {
    [1] = workspace.Rake.Ribs,
    [2] = workspace.Rake.Humanoid,
    [3] = 0
}

game:GetService("ReplicatedStorage").PanRE.DamageRE:FireServer(unpack(args))

end)
AutoFarm:NewToggle("Start!", "", function(state)
    if state then
        _G.Toggle = true

while _G.Toggle do
wait(29)
game:GetService("ReplicatedStorage").HitEvent:FireServer()
wait(1)
local args = {
    [1] = workspace.Rake.Humanoid,
    [2] = 0
}

game:GetService("ReplicatedStorage").healthEvent:FireServer(unpack(args))
end
    else
        _G.Toggle = false

while _G.Toggle do
wait(29)
game:GetService("ReplicatedStorage").HitEvent:FireServer()
wait(1)
local args = {
    [1] = workspace.Rake.Humanoid,
    [2] = 0
}

game:GetService("ReplicatedStorage").healthEvent:FireServer(unpack(args))
end
    end
end)
Rake:NewButton("FlareRake", "ButtonInfo", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = workspace.Rake.Humanoid,
    [2] = workspace.Rake.AI.StunTime,
    [3] = workspace.Rake.AI.Stuns,
    [4] = 0
}

game:GetService("ReplicatedStorage").FlareRE.StunRE:FireServer(unpack(args))

end)
